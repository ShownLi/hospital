<?xml version="1.0" encoding="utf-8" ?> 
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.tourmade.crm.mapper.order.DemoOrderMapper">

	<select id="queryOrder" parameterType="Map" resultType="DemoOrder">
		SELECT *
		FROM (
		select
		u.order_id as orderid,
		u.customer_id as customerid,
		u.customer_name as customername,
		u.agency_id as agencyid,
		u.agency_name as agencyname,
		u.sales_id as salesid,
		u.sales_name as salesname,
		u.destination as destination,
		u.budget as budget,
		u.status as status,
		u.reason as reason,
		u.group_time as grouptime,
		u.group_number as groupnumber,
		u.start_date as startdate,
		u.end_date as enddate,
		u.group_price as groupprice,
		u.currency as currency,
		u.exchange_rate as exchangerate,
		u.rmb_rate as rmbrate,
		u.last_response as lastresponse,	
		u.creat_time as creattime,
		u.isdel
		from tm_order u  
		where u.isdel = 0 
		order by u.creat_time
		) table_alias
		limit #{b},#{e}
	</select>

	<select id="countOrder" parameterType="DemoOrder" resultType="long">
		select count(u.order_id) from tm_order u
		where
		u.isdel = 0

	</select>
	
	<insert id="saveOrder" parameterType="DemoOrder" flushCache="true" useGeneratedKeys="true" keyProperty="order_id" keyColumn="GENERATED_KEY">
		insert into tm_order(
		customer_name,
		agency_id,
		agency_name,
		sales_id,
		sales_name,
		destination,
		budget,
		status,
		reason,
		group_time,
		group_number,
		start_date,
		end_date,
		group_price,
		currency,
		exchange_rate,
		rmb_rate,
		last_response,
		creat_time,
		isdel
		)values(
		#{customername,jdbcType=VARCHAR},
		#{agencyid,jdbcType=VARCHAR},
		#{agencyname,jdbcType=VARCHAR},
		#{salesid,jdbcType=VARCHAR},
		#{salesname,jdbcType=VARCHAR},
		#{destination,jdbcType=VARCHAR},
		#{budget,jdbcType=VARCHAR},
		#{status,jdbcType=VARCHAR},
		#{reason,jdbcType=VARCHAR},
		#{grouptime,jdbcType=VARCHAR},
		#{groupnumber,jdbcType=VARCHAR},
		#{startdate,jdbcType=VARCHAR},
		#{enddate,jdbcType=VARCHAR},
		#{groupprice,jdbcType=VARCHAR},
		#{currency,jdbcType=VARCHAR},
		#{exchangerate,jdbcType=VARCHAR},
		#{rmbrate,jdbcType=VARCHAR},
		#{lastresponse,jdbcType=VARCHAR},
		NOW(),
		0
		)
	</insert>

	<update id="updateOrder" parameterType="DemoOrder" flushCache="true">
		update tm_order
		set
		customer_name=#{customername},
		agency_id=#{agencyid},
		agency_name=#{agencyname},
		sales_id=#{salesid},
		sales_name=#{salesname},
		destination=#{destination},
		budget=#{budget},
		status=#{status},
		reason=#{reason},
		group_time=#{grouptime},
		group_number=#{groupnumber},
		start_date=#{startdate},
		end_date=#{enddate},
		group_price=#{groupprice},
		rmb_price=#{rmbprice},
		currency=#{currency},
		exchange_rate=#{exchangerate},
		last_response=#{lastresponse},
		update_time=NOW()
		where
		order_id=#{orderid}
	</update>
	
	<select id="getOrderById" parameterType="int" resultType="DemoOrder">
		select
		u.order_id as orderid,
		u.customer_id as customerid,
		u.customer_name as customername,
		u.agency_id as agencyid,
		u.agency_name as agencyname,
		u.sales_id as salesid,
		u.sales_name as salesname,
		u.destination as destination,
		u.budget as budget,
		u.status as status,
		u.reason as reason,
		u.group_time as grouptime,
		u.group_number as groupnumber,
		u.start_date as startdate,
		u.end_date as enddate,
		u.group_price as groupprice,
		u.currency as currency,
		u.exchange_rate as exchangerate,
		u.rmb_rate as rmbrate,
		u.last_response as lastresponse,	
		u.creat_time as creattime,
		u.isdel as isdel
		from tm_order u where u.order_id = #{orderid}
	</select>
	
	<select id="getParameterInfo" parameterType="String" resultType="DemoList">
		select
		u.para_domain,
		u.para_value as id,
		u.chinese as text,
		u.isdisplay,
		u.isdel 
		from tm_parameter u where u.isdisplay = 1 and u.isdel = 0 and u.para_domain = #{domain}
	</select>
	
	<update id="deleteOrderById" parameterType="int" flushCache="true"
		statementType="PREPARED">
		update tm_order
		set
		isdel=1
		where
		order_id = #{orderid}
	</update>
</mapper>