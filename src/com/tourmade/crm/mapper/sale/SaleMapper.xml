<?xml version="1.0" encoding="utf-8" ?> 
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.tourmade.crm.mapper.sale.SaleMapper">

	<select id="querySale" parameterType="Map" resultType="Sale">
		select
			u.sales_id as salesId,
			u.sales_portal_id as salesPortalId,
			u.sales_name as salesName,
			u.sales_email as salesEmail,
			u.isdel
		from tm_sales u where u.agency_id = #{agencyId} and u.isdel = 0
		order by u.creat_time
		<!-- limit #{start},#{length} -->
	</select>

	<select id="countSale" parameterType="Sale" resultType="long">
		select count(u.sales_id),u.agency_id from tm_sales u
		where u.agency_id = #{agencyId} and u.isdel = 0
	</select>
	
	<insert id="saveSale" parameterType="Sale" flushCache="true" useGeneratedKeys="true" keyProperty="salesId" keyColumn="GENERATED_KEY">
		insert into tm_sales(
			sales_name,
			sales_name_en,
			sales_portal_id,
			agency_id,
			sales_email,
			creat_time,
			update_time,
			isdel
		)values(
			#{salesName,jdbcType=VARCHAR},
			#{salesEnglishName,jdbcType=VARCHAR},
			#{salesPortalId,jdbcType=VARCHAR},
			#{agencyId,jdbcType=VARCHAR},
			#{salesEmail,jdbcType=VARCHAR},
			NOW(),
			NOW(),
			0
		)
	</insert>

	<update id="updateSale" parameterType="Sale" flushCache="true">
		update tm_sales set
			sales_name=#{salesName},
			sales_name_en=#{salesEnglishName},
			sales_portal_id=#{salesPortalId},
			sales_email=#{salesEmail},
			update_time=NOW()
		where sales_id=#{salesId}
	</update>
	
	<select id="getSaleById" parameterType="int" resultType="Sale">
		select
			u.sales_id as salesId,
			u.sales_portal_id as salesPortalId,
			u.sales_name as salesName,
			u.sales_name_en as salesEnglishName,
			u.agency_id as agencyId,
			u.sales_email as salesEmail,
			u.isdel as isdel
		from tm_sales u where u.sales_id = #{salesId}
	</select>
	
	<select id="getAgency" resultType="EntityList">
		select
		u.agency_id as id,
		u.agency_name as text,
		u.isdel 
		from tm_agency u where u.isdel = 0
	</select>
	

	<update id="deleteSaleById" parameterType="int" flushCache="true"
		statementType="PREPARED">
		update tm_sales
		set
		isdel=1
		where
		sales_id = #{salesId}
	</update>
	
	<update id="updateOrderEmail" parameterType="Sale" flushCache="true">
		update tm_order 
		set
		agency_email_real = #{salesEmail} 
		where order_id  
		in (select a.id from 
		((select order_id as id from tm_order 
		where sales_id = ${salesId} 
		and agency_email_real = "")a)
		);
	</update>
</mapper>