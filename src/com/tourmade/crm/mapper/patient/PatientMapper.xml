<?xml version="1.0" encoding="GBK" ?> 
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.tourmade.crm.mapper.patient.PatientMapper">

	<select id="queryPatient" parameterType="Map" resultType="Patient">
		select 
			r.patientId as patientId,
			r.name as name,
			r.phone as phone,
			r.address as address,
			r.birthday as birthday,
			r.sex as sex,
			r.urgentPhone as urgentPhone,
			r.source as source,
			r.date as date,
			r.createTime as createTime,
			r.isdel as isdel
		from r_patient r where r.isdel = 0
		<if test="name != null and name != ''">
            and name like '%${name}%' 
        </if>
		<if test="patientId != null and patientId != ''">
            and patientId like '%${patientId}%' 
        </if>
		<if test="phone != null and phone != ''">
            and phone like '%${patientId}%' 
        </if>
		ORDER BY r.createTime DESC
		limit #{start},#{length}
	</select>

	<select id="countPatient" parameterType="Patient" resultType="long">
		select count(r.patientId) from r_patient r
		where
		r.isdel = 0
		<if test="name != null and name != ''">
            and name like '%${name}%' 
        </if>
		<if test="patientId != null and patientId != ''">
            and patientId like '%${patientId}%' 
        </if>
		<if test="phone != null and phone != ''">
            and phone like '%${patientId}%' 
        </if>
	</select>

	<insert id="savePatient" parameterType="Patient" flushCache="true" useGeneratedKeys="true" keyProperty="patientId" keyColumn="GENERATED_KEY">
		insert into r_patient(
		name,
		phone,
		address,
		birthday,
		sex,
		urgentPhone,
		source,
		date,
		createTime,
		updateTime,
		patientId,
		isdel
		)values(
		#{name,jdbcType=VARCHAR},
		#{phone,jdbcType=VARCHAR},
		#{address,jdbcType=VARCHAR},
		#{birthday,jdbcType=VARCHAR},
		#{sex,jdbcType=VARCHAR},
		#{urgentPhone,jdbcType=VARCHAR},
		#{source,jdbcType=VARCHAR},
		NOW(),
		NOW(),
		NOW(),
		#{patientId},
		0
		)
	</insert>

	<update id="updatePatient" parameterType="Patient" flushCache="true">
		update r_patient
		<set>
			<if test="name != null">name=#{name},</if>
			<if test="phone != null">phone=#{phone},</if>
			<if test="address != null">address=#{address},	</if>
			<if test="birthday != null">birthday=#{birthday},</if>
			<if test="sex != null">sex=#{sex},</if>
			<if test="urgentPhone != null">urgentPhone=#{urgentPhone},</if>
			<if test="source != null">source=#{source},</if>
			updateTime=NOW(),
		</set>
		where
		patientId=#{patientId}
	</update>

	<select id="getPatientById" parameterType="int" resultType="Patient">
		select 
			r.patientId as patientId,
			r.name as name,
			r.phone as phone,
			r.address as address,
			r.birthday as birthday,
			r.sex as sex,
			r.urgentPhone as urgentPhone,
			r.source as source,
			r.date as date,
			r.createTime as createTime,
			r.isdel as isdel
		from r_patient r where r.isdel = 0 and patientId = #{patientId}
	</select>

	<update id="deletePatientById" parameterType="int" flushCache="true"
		statementType="PREPARED">
		update r_patient
		set
		isdel=1,updateTime=NOW()
		where
		patientId = #{patientId}
	</update>
	
	<select id="getParameterInfo" parameterType="String" resultType="EntityList">
		select
		u.para_domain,
		u.para_value as id,
		u.chinese as text,
		u.isdisplay,
		u.isdel 
		from tm_parameter u where u.isdisplay = 1 and u.isdel = 0 and u.para_domain = #{domain}
		ORDER BY u.para_sort desc, u.para_value
	</select>
	
</mapper>








