<?xml version="1.0" encoding="utf-8" ?> 
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.tourmade.crm.mapper.agency.AgencyMapper">

	<select id="queryAgency" parameterType="Map" resultType="Agency">
		SELECT 
			u.agency_id as agencyId,
			u.agency_name as name,
			u.service as service,
			u.country as country,
			u.destination as destination,
			u.language as language,
			u.source as source,
			u.agency_name_en as nameEn,
			u.website as website,
			u.found_time as foundTime,
			u.location as location,
			u.introduction as introduction,
			u.account as account,
			u.currency as currency,
			u.bank as bank,
			u.payment as payment,
			u.license as license,
			u.score as score,
			u.status as status,
			u.creat_time as creatTime,
			u.isdel as isdel
		from tm_agency u  
		where u.isdel = 0 
		<if test="name != null and name != ''">
                and   agency_name like '%${name}%' 
        </if>
        <if test="country != null and country != ''">
                and   country = #{country}
        </if>
        <if test="destination != null and destination != ''">
                and   destination like '%${destination}%'
        </if>
		order by u.creat_time
		limit #{start},#{length}
	</select>

	<select id="countAgency" parameterType="Agency" resultType="long">
		select count(u.agency_id) from tm_agency u
		where
		u.isdel = 0
		<if test="name != null and name != ''">
             	and   agency_name like '%${name}%' 
        </if>
        <if test="country != null and country != ''">
                and   country = #{country}
        </if>
        <if test="destination != null and destination != ''">
                and   destination like '%${destination}%'
        </if>

	</select>
	
	<insert id="saveAgency" parameterType="Agency" flushCache="true" useGeneratedKeys="true" keyProperty="agencyId" keyColumn="GENERATED_KEY">
		insert into tm_agency(
			agency_name,
			country,
			language,
			destination,
			service,
			source,
			agency_name_en,
			website,
			found_time,
			location,
			introduction,
			account,
			currency,
			bank,
			payment,
			license,
			score,
			status,
			creat_time,
			update_time,
			sendmail,
			isdel
		
		)values(
			#{name,jdbcType=VARCHAR},
			#{country,jdbcType=VARCHAR},
			#{language,jdbcType=VARCHAR},
			#{destination,jdbcType=VARCHAR},
			#{service,jdbcType=VARCHAR},
			#{source,jdbcType=VARCHAR},
			#{nameEn,jdbcType=VARCHAR},
			#{website,jdbcType=VARCHAR},
			#{foundTime,jdbcType=VARCHAR},
			#{location,jdbcType=VARCHAR},
			#{introduction,jdbcType=VARCHAR},
			#{account,jdbcType=VARCHAR},
			#{currency,jdbcType=VARCHAR},
			#{bank,jdbcType=VARCHAR},
			#{payment,jdbcType=VARCHAR},
			#{license,jdbcType=VARCHAR},
			#{score,jdbcType=VARCHAR},
			#{status,jdbcType=VARCHAR},
			NOW(),
			NOW(),
			#{isSendmail},
			0
		)
	</insert>

	<update id="updateAgency" parameterType="Agency" flushCache="true">
		update tm_agency
		set
			agency_name=#{name},
			country=#{country},
			destination=#{destination},
			language=#{language},
			sendmail=#{isSendmail},
			service=#{service},
			source=#{source},
			agency_name_en=#{nameEn},
			website=#{website},
			found_time=#{foundTime},
			location=#{location},
			introduction=#{introduction},
			account=#{account},
			currency=#{currency},
			bank=#{bank},
			payment=#{payment},
			license=#{license},
			score=#{score},
			status=#{status},
			update_time=NOW()
		where
		agency_id=#{agencyId}
	</update>
	
	<select id="getAgencyById" parameterType="int" resultType="Agency">
		select
			u.agency_id as agencyId,
			u.agency_name as name,
			u.service as service,
			u.country as country,
			u.destination as destination,
			u.language as language,
			u.source as source,
			u.agency_name_en as nameEn,
			u.website as website,
			u.found_time as foundTime,
			u.location as location,
			u.introduction as introduction,
			u.account as account,
			u.currency as currency,
			u.bank as bank,
			u.payment as payment,
			u.license as license,
			u.score as score,
			u.status as status,
			u.creat_time as creatTime,
			u.isdel as isdel
		from tm_agency u where u.agency_id = #{agencyId}
	</select>
	
	<select id="getParameterInfo" parameterType="String" resultType="EntityList">
		select
		u.para_domain,
		u.para_value as id,
		u.chinese as text,
		u.isdisplay,
		u.isdel 
		from tm_parameter u where u.isdisplay = 1 and u.isdel = 0 and u.para_domain = #{domain}
		ORDER BY u.para_sort desc, u.para_value
	</select>
	
	<update id="deleteAgencyById" parameterType="int" flushCache="true" statementType="PREPARED">
		update tm_agency
		set
		isdel=1,update_time=NOW()
		where
		agency_id = #{agencyId}
	</update>
	
	<select id="checkAgencyHaveOrder"  parameterType="int" resultType="String">
		select 
			o.order_id
		from tm_agency a LEFT JOIN tm_order o on a.agency_id = o.agency_id 
		where a.agency_id = #{agencyId} 
		GROUP BY a.agency_id
	</select>
	
</mapper>



