<?xml version="1.0" encoding="GBK" ?> 
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.tourmade.crm.mapper.finance.FinanceMapper">

	<select id="getPriceRecordListByOrderId" parameterType="int"
		resultType="com.tourmade.crm.entity.PriceRecord">
		SELECT
		price_id as priceId,
		price_code as priceCode,
		order_id
		as orderId,
		payment_item as paymentItem,
		IFNULL(price_budget,0) as
		priceBudget,
		deadline,
		IFNULL(price_real,0) as priceReal,
		account,
		received_time as receivedTime,
		comment,
		summary,
		recorder,
		IFNULL(price_adjust,0) as priceAdjust,
		status,
		create_time as
		createTime,
		update_time as updateTime,
		isdel
		FROM tm_price_record
		WHERE
		isdel = 0 and order_id = #{id};
	</select> 

	<select id="getCostRecordListByOrderId" parameterType="int"
		resultType="com.tourmade.crm.entity.CostRecord">

		SELECT
		cost_id as costId,
		order_id as orderId,
		agency_id as agencyId,
		payment_item as paymentItem,
		IFNULL(cost_budget,0) as costBudget,
		IFNULL(cost_real,0) as costReal,
		account,
		pay_time as payTime,
		comment,
		summary,
		recorder,
		IFNULL(cost_adjust,0) as costAdjust,
		status,
		create_time as createTime,
		update_time as updateTime,
		isdel
		FROM
		tm_cost_record
		WHERE isdel = 0 and order_id = #{id};
	</select>
	
	<update id="updatePriceRecord" parameterType="PriceRecord">
		update tm_price_record
		set
		status = 2 ,
		price_real = #{priceReal},
		account = #{account},
		received_time =	#{receivedTime},
		summary = #{summary},
		recorder = #{recorder},
		update_time = NOW()
		where
		price_code = #{priceCode}
	</update>

	<update id="updateCostRecord" parameterType="CostRecord">
		update
		tm_cost_record
		set
		status = 2 ,
		cost_real = #{costReal},
		account = #{account},
		pay_time = #{payTime},
		summary = #{summary},
		recorder = #{recorder},
		update_time = NOW()
		where cost_id =	#{costId}
	</update>
	
	<update id="updateOrderAfterUpdatePriceRecord" parameterType="PriceRecord">
		update tm_order
		set
		rmb_price = #{priceBudget},
		price_real = #{priceReal},
		price_adjust = #{priceAdjust},
		update_time = NOW()
		where
		order_id = #{orderId}
	</update>

	<select id="getAllSumPriceRecord" parameterType="int"
		resultType="PriceRecord">
		SELECT
		SUM(IFNULL(price_budget,0)) AS priceBudget,
		SUM(IFNULL(price_real,0)) AS priceReal,
		SUM(IFNULL(price_adjust,0)) AS priceAdjust
		FROM tm_price_record
		WHERE
		order_id = #{orderId};
	</select>
	
	<select id="getAllSumCostRecord" parameterType="int" resultType="CostRecord">
		SELECT
		SUM(IFNULL(cost_budget,0)) AS costBudget,
		SUM(IFNULL(cost_real,0)) AS costReal,
		SUM(IFNULL(cost_adjust,0)) AS costAdjust
		FROM tm_cost_record
		WHERE
		order_id = #{orderId};
	</select>
	
	<update id="updateOrderAfterUpdateCostRecord" parameterType="CostRecord">
		update tm_order
		set
		cost_budget = #{costBudget},
		cost_real = #{costReal},
		cost_adjust = #{costAdjust},
		update_time = NOW()
		where order_id = #{orderId}
	</update>
	
	<update id="balanceOrderByOrderId" parameterType="int">
		update tm_order
		set
		finance_status = 3,
		update_time = NOW()
		where order_id = #{orderId}
	</update>
	
	<update id="balancePriceRecordByOrderId" parameterType="int">
		update
		tm_price_record
		set
		status = 3,
		update_time = NOW()
		where order_id =
		#{orderId}
	</update>
	
	<update id="balanceCostRecordByOrderId" parameterType="int">
		update
		tm_cost_record
		set
		status = 3,
		update_time = NOW()
		where order_id = #{orderId}
	</update>
	
    <update id="priceAdjustMethod" parameterType="PriceRecord">
		update tm_price_record
		set
		price_adjust = #{priceAdjust},
		update_time = NOW()
		where price_code = #{priceCode}
	</update>
	
	<update id="costAdjustMethod" parameterType="CostRecord">
	update tm_cost_record
	set
	cost_adjust = #{costAdjust},
	update_time = NOW()
	where cost_id = #{costId}
	</update> 
	
	<select id="getAllUser" resultType="EntityList">
		select
		u.user_id as id,
		u.user_name as text,
		u.isdel = 0
		from tm_user u 
	</select>
	<select id="getAllAgency" resultType="EntityList">
		select
		agency_id as id,
		agency_name as text,
		isdel = 0
		from tm_agency 
	</select>
		
</mapper>
