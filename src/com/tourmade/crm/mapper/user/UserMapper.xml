<?xml version="1.0" encoding="GBK" ?> 
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.tourmade.crm.mapper.user.UserMapper">

	<select id="queryUser" parameterType="Map" resultType="User">
		select
			u.user_id as userId,
			u.user_name as loginName,
			u.loginname as name,
			u.password as pwd,
			u.user_email as email,
			u.mobilephone as mobilephone,
			u.creat_time as creatTime,
			u.isdel as isdel
		from tm_user u where u.isdel = 0
		order by u.creat_time desc
		limit #{start},#{length}
	</select>

	<select id="permissionCheckUrl" parameterType="String" resultType="String">
		select url as url from tm_menu where menu_id in (
			select menu_id from tm_role_x_menu where role_id=(				
				select 
				role_id 
				from tm_user 
				where loginname=#{username}
			)
		)
	</select>
	
	<select id="permissionCheckRole" parameterType="String" resultType="String">
		select role_id from tm_user where loginname=#{username}
	</select>
	
	<select id="checkButtonIdExist" parameterType="String" resultType="String">
		select menu_id as menuId from tm_role_x_menu where role_id=#{1} and menu_id=#{0}
	</select>
	
	<select id="checkButtonId" parameterType="String" resultType="String">
		select 
			menu_id as menuId
		from tm_menu 
		where menu_name=#{menuName}
	</select>

	<select id="countUser" parameterType="User" resultType="long">
		select count(u.user_id) from tm_user u
		where
		u.isdel = 0
	</select>

	<insert id="saveUser" parameterType="User" flushCache="true" useGeneratedKeys="true" keyProperty="userId" keyColumn="GENERATED_KEY">
		insert into tm_user(
		user_name,
		loginname,
		password,
		user_email,
		mobilephone,
		creat_time,
		update_time,
		role_id,
		isdel
		)values(
		#{name,jdbcType=VARCHAR},
		#{loginName,jdbcType=VARCHAR},
		#{pwd,jdbcType=VARCHAR},
		#{email,jdbcType=VARCHAR},
		#{mobilephone,jdbcType=VARCHAR},
		NOW(),
		NOW(),
		#{role_id},
		0
		)
	</insert>

	<update id="updateUser" parameterType="User" flushCache="true">
		update tm_user
		<set>
			<if test="loginName != null">loginname=#{loginName},</if>
			<if test="name != null">user_name=#{name},</if>
			<if test="email != null">user_email=#{email},	</if>
			<if test="pwd != null and pwd !=''">password=#{pwd},</if>
			<if test="mobilephone != null">mobilephone=#{mobilephone},</if>
			<if test="role_id != null">role_id=#{role_id},</if>
			update_time=NOW(),
		</set>
		where
		user_id=#{userId}
	</update>

	<select id="getUserById" parameterType="int" resultType="User">
		select
		u.user_id as userId,
		u.loginname as loginName,
		u.password as pwd,
		u.user_name as name,
		u.user_email as email,
		u.mobilephone as mobilephone,
		u.creat_time as creatTime,
		u.isdel as isdel
		from tm_user u where u.isdel = 0 and u.user_id = #{userId}
	</select>

	<update id="deleteUserById" parameterType="int" flushCache="true"
		statementType="PREPARED">
		update tm_user
		set
		isdel=1,update_time=NOW()
		where
		user_id = #{userId}
	</update>

	<select id="signin" parameterType="User" resultType="User">
		select
		u.user_id as userId,
		u.loginname as loginName,
		u.user_name as name,
		u.password as pwd,
		u.isdel as isdel
		from tm_user u where
		u.loginname = #{loginName} and u.password = #{pwd} and u.isdel = 0
	</select>
	
	<select id="validate" resultType="String">
		select  ${field} from ${table} u
		where u.${field} = #{name} 
		<if test="filter_field != null and filter_field != ''">
			and
			u.${filter_field} = #{filter_name} 
		</if>
		and u.isdel = 0
		limit 1
	</select>
	
	<select id="getParameterInfo" parameterType="String" resultType="EntityList">
		select
		u.para_domain,
		u.para_value as id,
		u.chinese as text,
		u.isdisplay,
		u.isdel 
		from tm_parameter u where u.isdisplay = 1 and u.isdel = 0 and u.para_domain = #{domain}
		ORDER BY u.para_sort desc, u.para_value
	</select>
	
	<select id="getUserRoles" resultType="EntityList">
		select role_id as id, role_name as text from tm_role
	</select>
	
	<select id="getRoleNameByid" parameterType="int" resultType="String">
		select 
			r.role_name 
		from tm_user u left join tm_role r on u.role_id=r.role_id 
		where u.user_id=#{userId} 
		and u.isdel=0
		GROUP BY r.role_name
	</select>
	
</mapper>








